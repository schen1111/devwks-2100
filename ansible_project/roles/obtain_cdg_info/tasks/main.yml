---
# tasks file for obtain_cdg_info

- name: get authentication token
  include_role: 
    role: get_crosswork_authentication

- name: invoke API to get all CDG detail
  uri:
    validate_certs: no
    status_code: [200, 201, 202]
    method: POST
    url: "https://{{cnc_ip}}:{{cnc_port}}/crosswork/dg-manager/v1/dg/query"
    return_content: yes
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: "Bearer {{ myJWT.content }}"
    body_format: json
    body: 
      filter:
        configData: 
          role: "ASSIGNED"
  register: cdg_detail

# - name: print cdg_detail variable type
#   debug:
#     msg: "{{ cdg_detail.json.data[0] | type_debug}}"

# - name: print cdg_detail
#   debug:
#     msg: "{{ cdg_detail }}"

- name: print a list of the CDG in Assinged Role and its vdgUuid
  debug:
    msg: "CDG name: {{ item.name }}. CDG vdgUuid: {{item.configData.vdgUuid}}"
  loop: "{{cdg_detail.json.data}}"
  when: item.configData.role == "ASSIGNED"
  loop_control:
    label: "{{ item.name }}"

# This task will output the CDG vdgUuid to a file
- name: output CDG vdgUuid to a file
  local_action:
    module: lineinfile
    line: "CDG name: {{ item.name }}. CDG vdgUuid: {{item.configData.vdgUuid}}"
    path: "{{playbook_dir}}/temp_folder/obtain_cdg_info/cdg-info"
    create: yes
  loop: "{{cdg_detail.json.data}}"
  loop_control:
    label: "{{ item.name }}"
  when: item.configData.role == "ASSIGNED"


# For Cisco Live Lab workshop use
# This task will replace vdguuid for each device in global_variable.yml with
#  the first occurrence of the vdguuid from get CDG detail API.
# This only works in this scenario because there's only CDG in the lab
- name: replace CDG vdgUuid in the global_variable.yml variable file
  replace:
    path: "{{playbook_dir}}/global_variable.yml"
    regexp: 'vdguuid:.*'
    replace: "vdguuid: {{cdg_detail.json.data[0].configData.vdgUuid}}"